diff --git a/contrib/postgres_fdw/postgres_fdw--1.0.sql b/contrib/postgres_fdw/postgres_fdw--1.0.sql
index a0f0fc1bf4..b81319be36 100644
--- a/contrib/postgres_fdw/postgres_fdw--1.0.sql
+++ b/contrib/postgres_fdw/postgres_fdw--1.0.sql
@@ -13,6 +13,11 @@ RETURNS void
 AS 'MODULE_PATHNAME'
 LANGUAGE C STRICT;
 
+CREATE FUNCTION postgres_fdw_execute_custom_command(command text, server text)
+RETURNS void
+AS 'MODULE_PATHNAME'
+LANGUAGE C STRICT;
+
 CREATE FOREIGN DATA WRAPPER postgres_fdw
   HANDLER postgres_fdw_handler
   VALIDATOR postgres_fdw_validator;
diff --git a/contrib/postgres_fdw/postgres_fdw.c b/contrib/postgres_fdw/postgres_fdw.c
index 856798ee72..1168544843 100644
--- a/contrib/postgres_fdw/postgres_fdw.c
+++ b/contrib/postgres_fdw/postgres_fdw.c
@@ -266,6 +266,7 @@ typedef struct
  * SQL functions
  */
 PG_FUNCTION_INFO_V1(postgres_fdw_handler);
+PG_FUNCTION_INFO_V1(postgres_fdw_execute_custom_command);
 
 /*
  * FDW callback routines
@@ -459,6 +460,35 @@ postgres_fdw_handler(PG_FUNCTION_ARGS)
 }
 
 /*
+ * Execute custom query on foreign server.
+ */
+Datum
+postgres_fdw_execute_custom_command(PG_FUNCTION_ARGS)
+{
+	const char	   *query = TextDatumGetCString(PG_GETARG_TEXT_P(0));
+	const char	   *server = TextDatumGetCString(PG_GETARG_TEXT_P(1));
+
+	Oid				serverid;
+	UserMapping	   *user;
+	PGconn		   *connection;
+
+	PGresult	   *res;
+
+	/* Fetch user mapping */
+	serverid = get_foreign_server_oid(server, false);
+	user = GetUserMapping(GetUserId(), serverid);
+
+	connection = GetConnection(user, false);
+
+	res = pgfdw_exec_query(connection, query);
+	if (PQresultStatus(res) != PGRES_COMMAND_OK)
+		pgfdw_report_error(ERROR, res, connection, true, query);
+	PQclear(res);
+
+	PG_RETURN_VOID();
+}
+
+/*
  * postgresGetForeignRelSize
  *		Estimate # of rows and width of the result of the scan
  *
